-- S1.1. Geslacht
ALTER TABLE medewerkers
ADD geslacht CHAR(1); -- max een char 

ALTER TABLE medewerkers
ADD CONSTRAINT m_geslacht_chk CHECK (geslacht IN ('M', 'V'));

-- Test geldig
UPDATE medewerkers
SET geslacht = 'M'
WHERE mnr = 7369;
-- Query returned successfully in 122 msec.

--  test ongeldig
 UPDATE medewerkers
 SET geslacht = 'X'
 WHERE mnr = 7369;
-- ERROR:  new row for relation "medewerkers" violates check constraint "m_geslacht_chk"
-- Failing row contains (7369, SMIT, N, TRAINER, 7902, 1985-12-17, 800.00, null, 20, X). 


-- S1.2

 INSERT INTO medewerkers (mnr, naam, voorl, functie, chef, gbdatum,
maandsal)
 VALUES (8000, 'DONK', 'A', 'Directeur', 7839, '1980-05-10', 4000);
 INSERT INTO afdelingen (anr, naam, locatie, hoofd)
 VALUES (50, 'ONDERZOEK', 'ZWOLLE', 8000);

-----------------------------------------------------------------
-- S1.3 Verbetering afdelingentabel
-----------------------------------------------------------------
CREATE SEQUENCE afdelingsnummer_seq
START WITH 60
INCREMENT BY 10
MINVALUE 10;

INSERT INTO afdelingen (anr, naam, locatie)
VALUES
    (nextval('afdelingsnummer_seq'), 'HR', 'AMSTERDAM'),
    (nextval('afdelingsnummer_seq'), 'IT', 'ROTTERDAM'),
    (nextval('afdelingsnummer_seq'), 'MARKETING', 'UTRECHT');

-- Kolom anr vergroten naar 3 cijfers
ALTER TABLE afdelingen
ALTER COLUMN anr TYPE NUMERIC(3);

-- check
SELECT * FROM afdelingen WHERE anr >= 60;

-- S1.4 Adressen
CREATE TABLE adressen (
    postcode CHAR(6),
    huisnummer INTEGER,
    ingangsdatum DATE,
    einddatum DATE CHECK (einddatum > ingangsdatum),
    telefoon CHAR(10) UNIQUE,
    med_mnr NUMERIC(4) NOT NULL,
    CONSTRAINT adressen_pk PRIMARY KEY (postcode, huisnummer, ingangsdatum),
    CONSTRAINT adressen_med_mnr_fk FOREIGN KEY (med_mnr) REFERENCES medewerkers(mnr)
);

-- Adres voor A DONK
INSERT INTO adressen (postcode, huisnummer, ingangsdatum, einddatum, telefoon, med_mnr)
VALUES ('1543HB', 25, '2024-09-11', '2025-09-11', '0612345678', 8000);

-- S1.5 
ALTER TABLE medewerkers
ADD CONSTRAINT comm_verkoper_chk
CHECK (
   (functie = 'VERKOPER' AND comm IS NOT NULL) OR
   (functie <> 'VERKOPER' AND comm IS NULL) 
);

INSERT INTO medewerkers (mnr, naam, voorl, functie, chef, gbdatum, maandsal, comm)
VALUES (8001, 'MULLER', 'TJ', 'TRAINER', 7566, '1982-08-18', 2000, 500);

INSERT INTO medewerkers (mnr, naam, voorl, functie, chef, gbdatum, maandsal, comm)
VALUES (8002, 'JANSEN', 'M', 'VERKOPER', 7698, '1981-07-17', 1000, NULL);



